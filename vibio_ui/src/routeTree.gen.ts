/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ShortsIndexImport } from './routes/shorts/index'
import { Route as SearchIndexImport } from './routes/search/index'
import { Route as PlaylistsIndexImport } from './routes/playlists/index'
import { Route as appIndexImport } from './routes/(app)/index'
import { Route as WatchVideoIdImport } from './routes/watch/$videoId'
import { Route as PlaylistsPlaylistIdImport } from './routes/playlists/$playlistId'
import { Route as AuthAuthImport } from './routes/auth/_auth'
import { Route as discoverySportIndexImport } from './routes/(discovery)/sport/index'
import { Route as discoveryNewsIndexImport } from './routes/(discovery)/news/index'
import { Route as discoveryMusicIndexImport } from './routes/(discovery)/music/index'
import { Route as discoveryGamingIndexImport } from './routes/(discovery)/gaming/index'
import { Route as PaymentMembershipResultImport } from './routes/payment/membership/result'
import { Route as ChannelChannelIdLayoutImport } from './routes/channel/$channelId/_layout'
import { Route as AuthOtpOtpImport } from './routes/auth/otp/_otp'
import { Route as AuthAuthRegisterImport } from './routes/auth/_auth.register'
import { Route as AuthAuthLoginImport } from './routes/auth/_auth.login'
import { Route as discoveryTrendingTrendingImport } from './routes/(discovery)/trending/_trending'
import { Route as ChannelChannelIdLayoutIndexImport } from './routes/channel/$channelId/_layout.index'
import { Route as discoveryTrendingTrendingIndexImport } from './routes/(discovery)/trending/_trending.index'
import { Route as ChannelChannelIdLayoutVideosImport } from './routes/channel/$channelId/_layout.videos'
import { Route as ChannelChannelIdLayoutShortsImport } from './routes/channel/$channelId/_layout.shorts'
import { Route as ChannelChannelIdLayoutPlaylistsImport } from './routes/channel/$channelId/_layout.playlists'
import { Route as ChannelChannelIdLayoutCommunityImport } from './routes/channel/$channelId/_layout.community'
import { Route as AuthOtpOtpNewAccountImport } from './routes/auth/otp/_otp.new-account'
import { Route as AuthOtpOtpMfaImport } from './routes/auth/otp/_otp.mfa'
import { Route as discoveryTrendingTrendingMusicImport } from './routes/(discovery)/trending/_trending.music'
import { Route as discoveryTrendingTrendingMovieImport } from './routes/(discovery)/trending/_trending.movie'
import { Route as discoveryTrendingTrendingGamingImport } from './routes/(discovery)/trending/_trending.gaming'

// Create Virtual Routes

const AuthImport = createFileRoute('/auth')()
const ChannelChannelIdImport = createFileRoute('/channel/$channelId')()
const AuthOtpImport = createFileRoute('/auth/otp')()
const discoveryTrendingImport = createFileRoute('/(discovery)/trending')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const ChannelChannelIdRoute = ChannelChannelIdImport.update({
  path: '/channel/$channelId',
  getParentRoute: () => rootRoute,
} as any)

const AuthOtpRoute = AuthOtpImport.update({
  path: '/otp',
  getParentRoute: () => AuthRoute,
} as any)

const discoveryTrendingRoute = discoveryTrendingImport.update({
  path: '/trending',
  getParentRoute: () => rootRoute,
} as any)

const ShortsIndexRoute = ShortsIndexImport.update({
  path: '/shorts/',
  getParentRoute: () => rootRoute,
} as any)

const SearchIndexRoute = SearchIndexImport.update({
  path: '/search/',
  getParentRoute: () => rootRoute,
} as any)

const PlaylistsIndexRoute = PlaylistsIndexImport.update({
  path: '/playlists/',
  getParentRoute: () => rootRoute,
} as any)

const appIndexRoute = appIndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WatchVideoIdRoute = WatchVideoIdImport.update({
  path: '/watch/$videoId',
  getParentRoute: () => rootRoute,
} as any)

const PlaylistsPlaylistIdRoute = PlaylistsPlaylistIdImport.update({
  path: '/playlists/$playlistId',
  getParentRoute: () => rootRoute,
} as any)

const AuthAuthRoute = AuthAuthImport.update({
  id: '/_auth',
  getParentRoute: () => AuthRoute,
} as any)

const discoverySportIndexRoute = discoverySportIndexImport.update({
  path: '/sport/',
  getParentRoute: () => rootRoute,
} as any)

const discoveryNewsIndexRoute = discoveryNewsIndexImport.update({
  path: '/news/',
  getParentRoute: () => rootRoute,
} as any)

const discoveryMusicIndexRoute = discoveryMusicIndexImport.update({
  path: '/music/',
  getParentRoute: () => rootRoute,
} as any)

const discoveryGamingIndexRoute = discoveryGamingIndexImport.update({
  path: '/gaming/',
  getParentRoute: () => rootRoute,
} as any)

const PaymentMembershipResultRoute = PaymentMembershipResultImport.update({
  path: '/payment/membership/result',
  getParentRoute: () => rootRoute,
} as any)

const ChannelChannelIdLayoutRoute = ChannelChannelIdLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => ChannelChannelIdRoute,
} as any)

const AuthOtpOtpRoute = AuthOtpOtpImport.update({
  id: '/_otp',
  getParentRoute: () => AuthOtpRoute,
} as any)

const AuthAuthRegisterRoute = AuthAuthRegisterImport.update({
  path: '/register',
  getParentRoute: () => AuthAuthRoute,
} as any)

const AuthAuthLoginRoute = AuthAuthLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthAuthRoute,
} as any)

const discoveryTrendingTrendingRoute = discoveryTrendingTrendingImport.update({
  id: '/_trending',
  getParentRoute: () => discoveryTrendingRoute,
} as any)

const ChannelChannelIdLayoutIndexRoute =
  ChannelChannelIdLayoutIndexImport.update({
    path: '/',
    getParentRoute: () => ChannelChannelIdLayoutRoute,
  } as any)

const discoveryTrendingTrendingIndexRoute =
  discoveryTrendingTrendingIndexImport.update({
    path: '/',
    getParentRoute: () => discoveryTrendingTrendingRoute,
  } as any)

const ChannelChannelIdLayoutVideosRoute =
  ChannelChannelIdLayoutVideosImport.update({
    path: '/videos',
    getParentRoute: () => ChannelChannelIdLayoutRoute,
  } as any)

const ChannelChannelIdLayoutShortsRoute =
  ChannelChannelIdLayoutShortsImport.update({
    path: '/shorts',
    getParentRoute: () => ChannelChannelIdLayoutRoute,
  } as any)

const ChannelChannelIdLayoutPlaylistsRoute =
  ChannelChannelIdLayoutPlaylistsImport.update({
    path: '/playlists',
    getParentRoute: () => ChannelChannelIdLayoutRoute,
  } as any)

const ChannelChannelIdLayoutCommunityRoute =
  ChannelChannelIdLayoutCommunityImport.update({
    path: '/community',
    getParentRoute: () => ChannelChannelIdLayoutRoute,
  } as any)

const AuthOtpOtpNewAccountRoute = AuthOtpOtpNewAccountImport.update({
  path: '/new-account',
  getParentRoute: () => AuthOtpOtpRoute,
} as any)

const AuthOtpOtpMfaRoute = AuthOtpOtpMfaImport.update({
  path: '/mfa',
  getParentRoute: () => AuthOtpOtpRoute,
} as any)

const discoveryTrendingTrendingMusicRoute =
  discoveryTrendingTrendingMusicImport.update({
    path: '/music',
    getParentRoute: () => discoveryTrendingTrendingRoute,
  } as any)

const discoveryTrendingTrendingMovieRoute =
  discoveryTrendingTrendingMovieImport.update({
    path: '/movie',
    getParentRoute: () => discoveryTrendingTrendingRoute,
  } as any)

const discoveryTrendingTrendingGamingRoute =
  discoveryTrendingTrendingGamingImport.update({
    path: '/gaming',
    getParentRoute: () => discoveryTrendingTrendingRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_auth': {
      id: '/auth/_auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthImport
      parentRoute: typeof AuthRoute
    }
    '/playlists/$playlistId': {
      id: '/playlists/$playlistId'
      path: '/playlists/$playlistId'
      fullPath: '/playlists/$playlistId'
      preLoaderRoute: typeof PlaylistsPlaylistIdImport
      parentRoute: typeof rootRoute
    }
    '/watch/$videoId': {
      id: '/watch/$videoId'
      path: '/watch/$videoId'
      fullPath: '/watch/$videoId'
      preLoaderRoute: typeof WatchVideoIdImport
      parentRoute: typeof rootRoute
    }
    '/(app)/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexImport
      parentRoute: typeof rootRoute
    }
    '/playlists/': {
      id: '/playlists/'
      path: '/playlists'
      fullPath: '/playlists'
      preLoaderRoute: typeof PlaylistsIndexImport
      parentRoute: typeof rootRoute
    }
    '/search/': {
      id: '/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchIndexImport
      parentRoute: typeof rootRoute
    }
    '/shorts/': {
      id: '/shorts/'
      path: '/shorts'
      fullPath: '/shorts'
      preLoaderRoute: typeof ShortsIndexImport
      parentRoute: typeof rootRoute
    }
    '/(discovery)/trending': {
      id: '/trending'
      path: '/trending'
      fullPath: '/trending'
      preLoaderRoute: typeof discoveryTrendingImport
      parentRoute: typeof rootRoute
    }
    '/(discovery)/trending/_trending': {
      id: '/trending/_trending'
      path: '/trending'
      fullPath: '/trending'
      preLoaderRoute: typeof discoveryTrendingTrendingImport
      parentRoute: typeof discoveryTrendingRoute
    }
    '/auth/_auth/login': {
      id: '/auth/_auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLoginImport
      parentRoute: typeof AuthAuthImport
    }
    '/auth/_auth/register': {
      id: '/auth/_auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthAuthRegisterImport
      parentRoute: typeof AuthAuthImport
    }
    '/auth/otp': {
      id: '/auth/otp'
      path: '/otp'
      fullPath: '/auth/otp'
      preLoaderRoute: typeof AuthOtpImport
      parentRoute: typeof AuthImport
    }
    '/auth/otp/_otp': {
      id: '/auth/otp/_otp'
      path: '/otp'
      fullPath: '/auth/otp'
      preLoaderRoute: typeof AuthOtpOtpImport
      parentRoute: typeof AuthOtpRoute
    }
    '/channel/$channelId': {
      id: '/channel/$channelId'
      path: '/channel/$channelId'
      fullPath: '/channel/$channelId'
      preLoaderRoute: typeof ChannelChannelIdImport
      parentRoute: typeof rootRoute
    }
    '/channel/$channelId/_layout': {
      id: '/channel/$channelId/_layout'
      path: '/channel/$channelId'
      fullPath: '/channel/$channelId'
      preLoaderRoute: typeof ChannelChannelIdLayoutImport
      parentRoute: typeof ChannelChannelIdRoute
    }
    '/payment/membership/result': {
      id: '/payment/membership/result'
      path: '/payment/membership/result'
      fullPath: '/payment/membership/result'
      preLoaderRoute: typeof PaymentMembershipResultImport
      parentRoute: typeof rootRoute
    }
    '/(discovery)/gaming/': {
      id: '/gaming/'
      path: '/gaming'
      fullPath: '/gaming'
      preLoaderRoute: typeof discoveryGamingIndexImport
      parentRoute: typeof rootRoute
    }
    '/(discovery)/music/': {
      id: '/music/'
      path: '/music'
      fullPath: '/music'
      preLoaderRoute: typeof discoveryMusicIndexImport
      parentRoute: typeof rootRoute
    }
    '/(discovery)/news/': {
      id: '/news/'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof discoveryNewsIndexImport
      parentRoute: typeof rootRoute
    }
    '/(discovery)/sport/': {
      id: '/sport/'
      path: '/sport'
      fullPath: '/sport'
      preLoaderRoute: typeof discoverySportIndexImport
      parentRoute: typeof rootRoute
    }
    '/(discovery)/trending/_trending/gaming': {
      id: '/trending/_trending/gaming'
      path: '/gaming'
      fullPath: '/trending/gaming'
      preLoaderRoute: typeof discoveryTrendingTrendingGamingImport
      parentRoute: typeof discoveryTrendingTrendingImport
    }
    '/(discovery)/trending/_trending/movie': {
      id: '/trending/_trending/movie'
      path: '/movie'
      fullPath: '/trending/movie'
      preLoaderRoute: typeof discoveryTrendingTrendingMovieImport
      parentRoute: typeof discoveryTrendingTrendingImport
    }
    '/(discovery)/trending/_trending/music': {
      id: '/trending/_trending/music'
      path: '/music'
      fullPath: '/trending/music'
      preLoaderRoute: typeof discoveryTrendingTrendingMusicImport
      parentRoute: typeof discoveryTrendingTrendingImport
    }
    '/auth/otp/_otp/mfa': {
      id: '/auth/otp/_otp/mfa'
      path: '/mfa'
      fullPath: '/auth/otp/mfa'
      preLoaderRoute: typeof AuthOtpOtpMfaImport
      parentRoute: typeof AuthOtpOtpImport
    }
    '/auth/otp/_otp/new-account': {
      id: '/auth/otp/_otp/new-account'
      path: '/new-account'
      fullPath: '/auth/otp/new-account'
      preLoaderRoute: typeof AuthOtpOtpNewAccountImport
      parentRoute: typeof AuthOtpOtpImport
    }
    '/channel/$channelId/_layout/community': {
      id: '/channel/$channelId/_layout/community'
      path: '/community'
      fullPath: '/channel/$channelId/community'
      preLoaderRoute: typeof ChannelChannelIdLayoutCommunityImport
      parentRoute: typeof ChannelChannelIdLayoutImport
    }
    '/channel/$channelId/_layout/playlists': {
      id: '/channel/$channelId/_layout/playlists'
      path: '/playlists'
      fullPath: '/channel/$channelId/playlists'
      preLoaderRoute: typeof ChannelChannelIdLayoutPlaylistsImport
      parentRoute: typeof ChannelChannelIdLayoutImport
    }
    '/channel/$channelId/_layout/shorts': {
      id: '/channel/$channelId/_layout/shorts'
      path: '/shorts'
      fullPath: '/channel/$channelId/shorts'
      preLoaderRoute: typeof ChannelChannelIdLayoutShortsImport
      parentRoute: typeof ChannelChannelIdLayoutImport
    }
    '/channel/$channelId/_layout/videos': {
      id: '/channel/$channelId/_layout/videos'
      path: '/videos'
      fullPath: '/channel/$channelId/videos'
      preLoaderRoute: typeof ChannelChannelIdLayoutVideosImport
      parentRoute: typeof ChannelChannelIdLayoutImport
    }
    '/(discovery)/trending/_trending/': {
      id: '/trending/_trending/'
      path: '/'
      fullPath: '/trending/'
      preLoaderRoute: typeof discoveryTrendingTrendingIndexImport
      parentRoute: typeof discoveryTrendingTrendingImport
    }
    '/channel/$channelId/_layout/': {
      id: '/channel/$channelId/_layout/'
      path: '/'
      fullPath: '/channel/$channelId/'
      preLoaderRoute: typeof ChannelChannelIdLayoutIndexImport
      parentRoute: typeof ChannelChannelIdLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthAuthRouteChildren {
  AuthAuthLoginRoute: typeof AuthAuthLoginRoute
  AuthAuthRegisterRoute: typeof AuthAuthRegisterRoute
}

const AuthAuthRouteChildren: AuthAuthRouteChildren = {
  AuthAuthLoginRoute: AuthAuthLoginRoute,
  AuthAuthRegisterRoute: AuthAuthRegisterRoute,
}

const AuthAuthRouteWithChildren = AuthAuthRoute._addFileChildren(
  AuthAuthRouteChildren,
)

interface AuthOtpOtpRouteChildren {
  AuthOtpOtpMfaRoute: typeof AuthOtpOtpMfaRoute
  AuthOtpOtpNewAccountRoute: typeof AuthOtpOtpNewAccountRoute
}

const AuthOtpOtpRouteChildren: AuthOtpOtpRouteChildren = {
  AuthOtpOtpMfaRoute: AuthOtpOtpMfaRoute,
  AuthOtpOtpNewAccountRoute: AuthOtpOtpNewAccountRoute,
}

const AuthOtpOtpRouteWithChildren = AuthOtpOtpRoute._addFileChildren(
  AuthOtpOtpRouteChildren,
)

interface AuthOtpRouteChildren {
  AuthOtpOtpRoute: typeof AuthOtpOtpRouteWithChildren
}

const AuthOtpRouteChildren: AuthOtpRouteChildren = {
  AuthOtpOtpRoute: AuthOtpOtpRouteWithChildren,
}

const AuthOtpRouteWithChildren =
  AuthOtpRoute._addFileChildren(AuthOtpRouteChildren)

interface AuthRouteChildren {
  AuthAuthRoute: typeof AuthAuthRouteWithChildren
  AuthOtpRoute: typeof AuthOtpRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthRoute: AuthAuthRouteWithChildren,
  AuthOtpRoute: AuthOtpRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface discoveryTrendingTrendingRouteChildren {
  discoveryTrendingTrendingGamingRoute: typeof discoveryTrendingTrendingGamingRoute
  discoveryTrendingTrendingMovieRoute: typeof discoveryTrendingTrendingMovieRoute
  discoveryTrendingTrendingMusicRoute: typeof discoveryTrendingTrendingMusicRoute
  discoveryTrendingTrendingIndexRoute: typeof discoveryTrendingTrendingIndexRoute
}

const discoveryTrendingTrendingRouteChildren: discoveryTrendingTrendingRouteChildren =
  {
    discoveryTrendingTrendingGamingRoute: discoveryTrendingTrendingGamingRoute,
    discoveryTrendingTrendingMovieRoute: discoveryTrendingTrendingMovieRoute,
    discoveryTrendingTrendingMusicRoute: discoveryTrendingTrendingMusicRoute,
    discoveryTrendingTrendingIndexRoute: discoveryTrendingTrendingIndexRoute,
  }

const discoveryTrendingTrendingRouteWithChildren =
  discoveryTrendingTrendingRoute._addFileChildren(
    discoveryTrendingTrendingRouteChildren,
  )

interface discoveryTrendingRouteChildren {
  discoveryTrendingTrendingRoute: typeof discoveryTrendingTrendingRouteWithChildren
}

const discoveryTrendingRouteChildren: discoveryTrendingRouteChildren = {
  discoveryTrendingTrendingRoute: discoveryTrendingTrendingRouteWithChildren,
}

const discoveryTrendingRouteWithChildren =
  discoveryTrendingRoute._addFileChildren(discoveryTrendingRouteChildren)

interface ChannelChannelIdLayoutRouteChildren {
  ChannelChannelIdLayoutCommunityRoute: typeof ChannelChannelIdLayoutCommunityRoute
  ChannelChannelIdLayoutPlaylistsRoute: typeof ChannelChannelIdLayoutPlaylistsRoute
  ChannelChannelIdLayoutShortsRoute: typeof ChannelChannelIdLayoutShortsRoute
  ChannelChannelIdLayoutVideosRoute: typeof ChannelChannelIdLayoutVideosRoute
  ChannelChannelIdLayoutIndexRoute: typeof ChannelChannelIdLayoutIndexRoute
}

const ChannelChannelIdLayoutRouteChildren: ChannelChannelIdLayoutRouteChildren =
  {
    ChannelChannelIdLayoutCommunityRoute: ChannelChannelIdLayoutCommunityRoute,
    ChannelChannelIdLayoutPlaylistsRoute: ChannelChannelIdLayoutPlaylistsRoute,
    ChannelChannelIdLayoutShortsRoute: ChannelChannelIdLayoutShortsRoute,
    ChannelChannelIdLayoutVideosRoute: ChannelChannelIdLayoutVideosRoute,
    ChannelChannelIdLayoutIndexRoute: ChannelChannelIdLayoutIndexRoute,
  }

const ChannelChannelIdLayoutRouteWithChildren =
  ChannelChannelIdLayoutRoute._addFileChildren(
    ChannelChannelIdLayoutRouteChildren,
  )

interface ChannelChannelIdRouteChildren {
  ChannelChannelIdLayoutRoute: typeof ChannelChannelIdLayoutRouteWithChildren
}

const ChannelChannelIdRouteChildren: ChannelChannelIdRouteChildren = {
  ChannelChannelIdLayoutRoute: ChannelChannelIdLayoutRouteWithChildren,
}

const ChannelChannelIdRouteWithChildren =
  ChannelChannelIdRoute._addFileChildren(ChannelChannelIdRouteChildren)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthAuthRouteWithChildren
  '/playlists/$playlistId': typeof PlaylistsPlaylistIdRoute
  '/watch/$videoId': typeof WatchVideoIdRoute
  '/': typeof appIndexRoute
  '/playlists': typeof PlaylistsIndexRoute
  '/search': typeof SearchIndexRoute
  '/shorts': typeof ShortsIndexRoute
  '/trending': typeof discoveryTrendingTrendingRouteWithChildren
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
  '/auth/otp': typeof AuthOtpOtpRouteWithChildren
  '/channel/$channelId': typeof ChannelChannelIdLayoutRouteWithChildren
  '/payment/membership/result': typeof PaymentMembershipResultRoute
  '/gaming': typeof discoveryGamingIndexRoute
  '/music': typeof discoveryMusicIndexRoute
  '/news': typeof discoveryNewsIndexRoute
  '/sport': typeof discoverySportIndexRoute
  '/trending/gaming': typeof discoveryTrendingTrendingGamingRoute
  '/trending/movie': typeof discoveryTrendingTrendingMovieRoute
  '/trending/music': typeof discoveryTrendingTrendingMusicRoute
  '/auth/otp/mfa': typeof AuthOtpOtpMfaRoute
  '/auth/otp/new-account': typeof AuthOtpOtpNewAccountRoute
  '/channel/$channelId/community': typeof ChannelChannelIdLayoutCommunityRoute
  '/channel/$channelId/playlists': typeof ChannelChannelIdLayoutPlaylistsRoute
  '/channel/$channelId/shorts': typeof ChannelChannelIdLayoutShortsRoute
  '/channel/$channelId/videos': typeof ChannelChannelIdLayoutVideosRoute
  '/trending/': typeof discoveryTrendingTrendingIndexRoute
  '/channel/$channelId/': typeof ChannelChannelIdLayoutIndexRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthAuthRouteWithChildren
  '/playlists/$playlistId': typeof PlaylistsPlaylistIdRoute
  '/watch/$videoId': typeof WatchVideoIdRoute
  '/': typeof appIndexRoute
  '/playlists': typeof PlaylistsIndexRoute
  '/search': typeof SearchIndexRoute
  '/shorts': typeof ShortsIndexRoute
  '/trending': typeof discoveryTrendingTrendingIndexRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
  '/auth/otp': typeof AuthOtpOtpRouteWithChildren
  '/channel/$channelId': typeof ChannelChannelIdLayoutIndexRoute
  '/payment/membership/result': typeof PaymentMembershipResultRoute
  '/gaming': typeof discoveryGamingIndexRoute
  '/music': typeof discoveryMusicIndexRoute
  '/news': typeof discoveryNewsIndexRoute
  '/sport': typeof discoverySportIndexRoute
  '/trending/gaming': typeof discoveryTrendingTrendingGamingRoute
  '/trending/movie': typeof discoveryTrendingTrendingMovieRoute
  '/trending/music': typeof discoveryTrendingTrendingMusicRoute
  '/auth/otp/mfa': typeof AuthOtpOtpMfaRoute
  '/auth/otp/new-account': typeof AuthOtpOtpNewAccountRoute
  '/channel/$channelId/community': typeof ChannelChannelIdLayoutCommunityRoute
  '/channel/$channelId/playlists': typeof ChannelChannelIdLayoutPlaylistsRoute
  '/channel/$channelId/shorts': typeof ChannelChannelIdLayoutShortsRoute
  '/channel/$channelId/videos': typeof ChannelChannelIdLayoutVideosRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/_auth': typeof AuthAuthRouteWithChildren
  '/playlists/$playlistId': typeof PlaylistsPlaylistIdRoute
  '/watch/$videoId': typeof WatchVideoIdRoute
  '/': typeof appIndexRoute
  '/playlists/': typeof PlaylistsIndexRoute
  '/search/': typeof SearchIndexRoute
  '/shorts/': typeof ShortsIndexRoute
  '/trending': typeof discoveryTrendingRouteWithChildren
  '/trending/_trending': typeof discoveryTrendingTrendingRouteWithChildren
  '/auth/_auth/login': typeof AuthAuthLoginRoute
  '/auth/_auth/register': typeof AuthAuthRegisterRoute
  '/auth/otp': typeof AuthOtpRouteWithChildren
  '/auth/otp/_otp': typeof AuthOtpOtpRouteWithChildren
  '/channel/$channelId': typeof ChannelChannelIdRouteWithChildren
  '/channel/$channelId/_layout': typeof ChannelChannelIdLayoutRouteWithChildren
  '/payment/membership/result': typeof PaymentMembershipResultRoute
  '/gaming/': typeof discoveryGamingIndexRoute
  '/music/': typeof discoveryMusicIndexRoute
  '/news/': typeof discoveryNewsIndexRoute
  '/sport/': typeof discoverySportIndexRoute
  '/trending/_trending/gaming': typeof discoveryTrendingTrendingGamingRoute
  '/trending/_trending/movie': typeof discoveryTrendingTrendingMovieRoute
  '/trending/_trending/music': typeof discoveryTrendingTrendingMusicRoute
  '/auth/otp/_otp/mfa': typeof AuthOtpOtpMfaRoute
  '/auth/otp/_otp/new-account': typeof AuthOtpOtpNewAccountRoute
  '/channel/$channelId/_layout/community': typeof ChannelChannelIdLayoutCommunityRoute
  '/channel/$channelId/_layout/playlists': typeof ChannelChannelIdLayoutPlaylistsRoute
  '/channel/$channelId/_layout/shorts': typeof ChannelChannelIdLayoutShortsRoute
  '/channel/$channelId/_layout/videos': typeof ChannelChannelIdLayoutVideosRoute
  '/trending/_trending/': typeof discoveryTrendingTrendingIndexRoute
  '/channel/$channelId/_layout/': typeof ChannelChannelIdLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/playlists/$playlistId'
    | '/watch/$videoId'
    | '/'
    | '/playlists'
    | '/search'
    | '/shorts'
    | '/trending'
    | '/auth/login'
    | '/auth/register'
    | '/auth/otp'
    | '/channel/$channelId'
    | '/payment/membership/result'
    | '/gaming'
    | '/music'
    | '/news'
    | '/sport'
    | '/trending/gaming'
    | '/trending/movie'
    | '/trending/music'
    | '/auth/otp/mfa'
    | '/auth/otp/new-account'
    | '/channel/$channelId/community'
    | '/channel/$channelId/playlists'
    | '/channel/$channelId/shorts'
    | '/channel/$channelId/videos'
    | '/trending/'
    | '/channel/$channelId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/playlists/$playlistId'
    | '/watch/$videoId'
    | '/'
    | '/playlists'
    | '/search'
    | '/shorts'
    | '/trending'
    | '/auth/login'
    | '/auth/register'
    | '/auth/otp'
    | '/channel/$channelId'
    | '/payment/membership/result'
    | '/gaming'
    | '/music'
    | '/news'
    | '/sport'
    | '/trending/gaming'
    | '/trending/movie'
    | '/trending/music'
    | '/auth/otp/mfa'
    | '/auth/otp/new-account'
    | '/channel/$channelId/community'
    | '/channel/$channelId/playlists'
    | '/channel/$channelId/shorts'
    | '/channel/$channelId/videos'
  id:
    | '__root__'
    | '/auth'
    | '/auth/_auth'
    | '/playlists/$playlistId'
    | '/watch/$videoId'
    | '/'
    | '/playlists/'
    | '/search/'
    | '/shorts/'
    | '/trending'
    | '/trending/_trending'
    | '/auth/_auth/login'
    | '/auth/_auth/register'
    | '/auth/otp'
    | '/auth/otp/_otp'
    | '/channel/$channelId'
    | '/channel/$channelId/_layout'
    | '/payment/membership/result'
    | '/gaming/'
    | '/music/'
    | '/news/'
    | '/sport/'
    | '/trending/_trending/gaming'
    | '/trending/_trending/movie'
    | '/trending/_trending/music'
    | '/auth/otp/_otp/mfa'
    | '/auth/otp/_otp/new-account'
    | '/channel/$channelId/_layout/community'
    | '/channel/$channelId/_layout/playlists'
    | '/channel/$channelId/_layout/shorts'
    | '/channel/$channelId/_layout/videos'
    | '/trending/_trending/'
    | '/channel/$channelId/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  PlaylistsPlaylistIdRoute: typeof PlaylistsPlaylistIdRoute
  WatchVideoIdRoute: typeof WatchVideoIdRoute
  appIndexRoute: typeof appIndexRoute
  PlaylistsIndexRoute: typeof PlaylistsIndexRoute
  SearchIndexRoute: typeof SearchIndexRoute
  ShortsIndexRoute: typeof ShortsIndexRoute
  discoveryTrendingRoute: typeof discoveryTrendingRouteWithChildren
  ChannelChannelIdRoute: typeof ChannelChannelIdRouteWithChildren
  PaymentMembershipResultRoute: typeof PaymentMembershipResultRoute
  discoveryGamingIndexRoute: typeof discoveryGamingIndexRoute
  discoveryMusicIndexRoute: typeof discoveryMusicIndexRoute
  discoveryNewsIndexRoute: typeof discoveryNewsIndexRoute
  discoverySportIndexRoute: typeof discoverySportIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  PlaylistsPlaylistIdRoute: PlaylistsPlaylistIdRoute,
  WatchVideoIdRoute: WatchVideoIdRoute,
  appIndexRoute: appIndexRoute,
  PlaylistsIndexRoute: PlaylistsIndexRoute,
  SearchIndexRoute: SearchIndexRoute,
  ShortsIndexRoute: ShortsIndexRoute,
  discoveryTrendingRoute: discoveryTrendingRouteWithChildren,
  ChannelChannelIdRoute: ChannelChannelIdRouteWithChildren,
  PaymentMembershipResultRoute: PaymentMembershipResultRoute,
  discoveryGamingIndexRoute: discoveryGamingIndexRoute,
  discoveryMusicIndexRoute: discoveryMusicIndexRoute,
  discoveryNewsIndexRoute: discoveryNewsIndexRoute,
  discoverySportIndexRoute: discoverySportIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/auth",
        "/playlists/$playlistId",
        "/watch/$videoId",
        "/",
        "/playlists/",
        "/search/",
        "/shorts/",
        "/trending",
        "/channel/$channelId",
        "/payment/membership/result",
        "/gaming/",
        "/music/",
        "/news/",
        "/sport/"
      ]
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_auth",
        "/auth/otp"
      ]
    },
    "/auth/_auth": {
      "filePath": "auth/_auth.tsx",
      "parent": "/auth",
      "children": [
        "/auth/_auth/login",
        "/auth/_auth/register"
      ]
    },
    "/playlists/$playlistId": {
      "filePath": "playlists/$playlistId.tsx"
    },
    "/watch/$videoId": {
      "filePath": "watch/$videoId.tsx"
    },
    "/": {
      "filePath": "(app)/index.tsx"
    },
    "/playlists/": {
      "filePath": "playlists/index.tsx"
    },
    "/search/": {
      "filePath": "search/index.tsx"
    },
    "/shorts/": {
      "filePath": "shorts/index.tsx"
    },
    "/trending": {
      "filePath": "(discovery)/trending",
      "children": [
        "/trending/_trending"
      ]
    },
    "/trending/_trending": {
      "filePath": "(discovery)/trending/_trending.tsx",
      "parent": "/trending",
      "children": [
        "/trending/_trending/gaming",
        "/trending/_trending/movie",
        "/trending/_trending/music",
        "/trending/_trending/"
      ]
    },
    "/auth/_auth/login": {
      "filePath": "auth/_auth.login.tsx",
      "parent": "/auth/_auth"
    },
    "/auth/_auth/register": {
      "filePath": "auth/_auth.register.tsx",
      "parent": "/auth/_auth"
    },
    "/auth/otp": {
      "filePath": "auth/otp",
      "parent": "/auth",
      "children": [
        "/auth/otp/_otp"
      ]
    },
    "/auth/otp/_otp": {
      "filePath": "auth/otp/_otp.tsx",
      "parent": "/auth/otp",
      "children": [
        "/auth/otp/_otp/mfa",
        "/auth/otp/_otp/new-account"
      ]
    },
    "/channel/$channelId": {
      "filePath": "channel/$channelId",
      "children": [
        "/channel/$channelId/_layout"
      ]
    },
    "/channel/$channelId/_layout": {
      "filePath": "channel/$channelId/_layout.tsx",
      "parent": "/channel/$channelId",
      "children": [
        "/channel/$channelId/_layout/community",
        "/channel/$channelId/_layout/playlists",
        "/channel/$channelId/_layout/shorts",
        "/channel/$channelId/_layout/videos",
        "/channel/$channelId/_layout/"
      ]
    },
    "/payment/membership/result": {
      "filePath": "payment/membership/result.tsx"
    },
    "/gaming/": {
      "filePath": "(discovery)/gaming/index.tsx"
    },
    "/music/": {
      "filePath": "(discovery)/music/index.tsx"
    },
    "/news/": {
      "filePath": "(discovery)/news/index.tsx"
    },
    "/sport/": {
      "filePath": "(discovery)/sport/index.tsx"
    },
    "/trending/_trending/gaming": {
      "filePath": "(discovery)/trending/_trending.gaming.tsx",
      "parent": "/trending/_trending"
    },
    "/trending/_trending/movie": {
      "filePath": "(discovery)/trending/_trending.movie.tsx",
      "parent": "/trending/_trending"
    },
    "/trending/_trending/music": {
      "filePath": "(discovery)/trending/_trending.music.tsx",
      "parent": "/trending/_trending"
    },
    "/auth/otp/_otp/mfa": {
      "filePath": "auth/otp/_otp.mfa.tsx",
      "parent": "/auth/otp/_otp"
    },
    "/auth/otp/_otp/new-account": {
      "filePath": "auth/otp/_otp.new-account.tsx",
      "parent": "/auth/otp/_otp"
    },
    "/channel/$channelId/_layout/community": {
      "filePath": "channel/$channelId/_layout.community.tsx",
      "parent": "/channel/$channelId/_layout"
    },
    "/channel/$channelId/_layout/playlists": {
      "filePath": "channel/$channelId/_layout.playlists.tsx",
      "parent": "/channel/$channelId/_layout"
    },
    "/channel/$channelId/_layout/shorts": {
      "filePath": "channel/$channelId/_layout.shorts.tsx",
      "parent": "/channel/$channelId/_layout"
    },
    "/channel/$channelId/_layout/videos": {
      "filePath": "channel/$channelId/_layout.videos.tsx",
      "parent": "/channel/$channelId/_layout"
    },
    "/trending/_trending/": {
      "filePath": "(discovery)/trending/_trending.index.tsx",
      "parent": "/trending/_trending"
    },
    "/channel/$channelId/_layout/": {
      "filePath": "channel/$channelId/_layout.index.tsx",
      "parent": "/channel/$channelId/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
